
apply Service "pgsql" {
  import "generic-service"

  check_command = "pgsql"
  vars.pgsql_username = "monitoring"
  vars.pgsql_password = "secret_password"
  vars.pgsql_database = "template1"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-archive_ready" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "archive_ready"
  vars.postgres_warning = 3
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-autovac_freeze" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "autovac_freeze"
  vars.postgres_warning = "3%"
  vars.postgres_critical = "10%"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-backends" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "backends"
  vars.postgres_warning = "90%"
  vars.postgres_critical = "95%"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-bloat" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "bloat"
  vars.postgres_warning = "16mb"
  vars.postgres_critical = "64mb"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-checkpoint" {
  import "generic-service"

  check_command = "postgres"
    command_endpoint = host.name
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "checkpoint"
  vars.postgres_datadir = "/var/lib/pgsql/9.6/data/"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-cluster_id" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "cluster_id"
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/
apply Service "pgsql-commitratio" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "commitratio"
  vars.postgres_warning = "98%"
  vars.postgres_critical = "95%"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-connection" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "connection"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-custom_query" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "custom_query"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-database_size" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "database_size"
  vars.postgres_warning = "9gb"
  vars.postgres_critical = "10gb"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-dbstats" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "dbstats"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-disabled_triggers" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "disabled_triggers"
  vars.postgres_warning = "1"
  vars.postgres_critical = "5"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-disk_space" {
  import "generic-service"
    command_endpoint = host.name

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "disk_space"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

/* Work only with 8.4 or older
apply Service "pgsql-fsm_pages" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "fsm_pages"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-fsm_relations" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "fsm_relations"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/
apply Service "pgsql-hitratio" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "hitratio"
  vars.postgres_warning = "90%"
  vars.postgres_critical = "70%"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-hot_standby_delay" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "hot_standby_delay"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-index_size" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "index_size"
  vars.postgres_warning = 8000000
  vars.postgres_critical = 10000000

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-last_analyze" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "last_analyze"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-last_autoanalyze" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "last_autoanalyze"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-last_autovacuum" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "last_autovacuum"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-last_vacuum" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "last_vacuum"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-listener" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "listener"
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/
apply Service "pgsql-locks" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "locks"
  vars.postgres_warning = 40
  vars.postgres_critical = 60

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-logfile" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "logfile"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

/*
apply Service "pgsql-new_version_bc" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "new_version_bc"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-new_version_box" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "new_version_box"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-new_version_cp" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "new_version_cp"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-new_version_pg" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "new_version_pg"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-new_version_tnm" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "new_version_tnm"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

/*
apply Service "pgsql-pgagent_jobs" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgagent_jobs"
  vars.postgres_warning = 80
  vars.postgres_critical = 100

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-pgb_pool_cl_active" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_cl_active"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_cl_waiting" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_cl_waiting"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_maxwait" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_maxwait"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_sv_active" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_sv_active"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_sv_idle" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_sv_idle"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_sv_login" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_sv_login"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_sv_tested" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_sv_tested"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgb_pool_sv_used" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgb_pool_sv_used"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgbouncer_backends" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgbouncer_backends"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-pgbouncer_checksum" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "pgbouncer_checksum"

  assign where (host.address || host.address6) && "app:postgresql-bouncer" in host.groups
}

apply Service "pgsql-prepared_txns" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "prepared_txns"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-query_runtime" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "query_runtime"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-query_time" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "query_time"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-relation_size" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "relation_size"
  vars.postgres_warning = 900000
  vars.postgres_critical = 1000000

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-replicate_row" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "replicate_row"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

/*
apply Service "pgsql-same_schema" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "same_schema"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-sequence" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "sequence"
  vars.postgres_warning = "3%"
  vars.postgres_critical = "10%"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-settings_checksum" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "settings_checksum"
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-slony_status" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "slony_status"

  assign where (host.address || host.address6) && "app:postgresql-slony" in host.groups
}

apply Service "pgsql-table_size" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "table_size"
  vars.postgres_warning = 90000000
  vars.postgres_critical = 100000000

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-timesync" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "timesync"
  vars.postgres_warning = 3
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-txn_idle" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "txn_idle"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-txn_time" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "txn_time"
  vars.postgres_warning = 5
  vars.postgres_critical = 10

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

apply Service "pgsql-txn_wraparound" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "txn_wraparound"
  vars.postgres_warning = "85"
  vars.postgres_critical = "95"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}

/*
apply Service "pgsql-version" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "version"
  #vars.postgres_critical = "9.6.2"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
*/

apply Service "pgsql-wal_files" {
  import "generic-service"

  check_command = "postgres"
  vars.postgres_dbuser = "monitoring"
  vars.postgres_dbpass = "secret_password"
  vars.postgres_action = "wal_files"
  vars.postgres_warning = "32"
  vars.postgres_critical = "40"

  assign where (host.address || host.address6) && "app:postgresql" in host.groups
}
