
apply Service "users" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_users_10"
  } else if ("ssh" in host.groups) {
  } else {
    check_command = "users"
    command_endpoint = host.name
  }

  vars.users_wgreater = host.vars.users_wgreater
  vars.users_cgreater = host.vars.users_cgreater

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service for (disk => config in host.vars.disks) {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_disk_10"
  } else if ("ssh" in host.groups) {
  } else {
    check_command = "disk"
     command_endpoint = host.name
  }

  vars += config
  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "disk_all" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_disk_10"
  } else if ("ssh" in host.groups) {
  } else {
    check_command = "disk"
     command_endpoint = host.name
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "load" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_load_4"
  } else if ("ssh" in host.groups) {
  } else {
    check_command = "load"
      command_endpoint = host.name
  }

  /* Used by the ScheduledDowntime apply rule in `downtimes.conf`. */
  // vars.backup_downtime = "02:00-03:00"

  vars.load_wload1 = host.vars.load_wload1
  vars.load_wload5 = host.vars.load_wload5
  vars.load_wload15 = host.vars.load_wload15
  vars.load_cload1 = host.vars.load_cload1
  vars.load_cload5 = host.vars.load_cload5
  vars.load_cload15 = host.vars.load_cload15

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}


apply Service "mem_free" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_mem_10"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "mem"
    command_endpoint = host.name
    vars.mem_used = false
    vars.mem_free = true
    vars.mem_cache = false
    vars.mem_warning = 15
    vars.mem_critical = 10
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "mem_cache" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_mem_10"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "mem"
    command_endpoint = host.name
    vars.mem_used = false
    vars.mem_free = true
    vars.mem_cache = true
    vars.mem_warning = 15
    vars.mem_critical = 10
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "procs_zombie" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_zombie_procs"
  } else if ("ssh" in host.groups) {
  } else {
    check_command = "procs"
      command_endpoint = host.name
      vars.procs_warning = 1
      vars.procs_critical = 2
      vars.procs_state = "Z"
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "procs_total" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_total_procs_200"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "procs"
    command_endpoint = host.name
  }

  vars.procs_warning = host.vars.procs_warning
  vars.procs_critical = host.vars.procs_critical

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "swap" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_swap_10"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "swap"
    command_endpoint = host.name
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service "yum" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_yum"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "yum"
    command_endpoint = host.name
  }

  assign where (host.address || host.address6) && ("CentOS" in host.groups || "Redhat" in host.groups)
}

apply Service "apt" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_apt"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "apt"
    command_endpoint = host.name
  }

  assign where (host.address || host.address6) && ("Debian" in host.groups || "Ubuntu" in host.groups)
}

apply Service "ntp_time" {
  import "generic-service"

  if ("nrpe" in host.groups) {
    check_command = "nrpe"
      vars.nrpe_command = "check_ntp_system_time"
  } else if ("ssh" in host.groups) {
  } else {
  check_command = "ntp_time"
    command_endpoint = host.name
    vars.ntp_address = "0.europe.pool.ntp.org"
    vars.ntp_warning = 5
    vars.ntp_critical = 10
  }

  assign where (host.address || host.address6) && host.vars.os == "Linux"
}
